{"ast":null,"code":"// src/components/Live.js\nimport React,{useEffect,useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import socket from'../socket';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Live(){const location=useLocation();const navigate=useNavigate();const{song}=location.state||{};const[autoScroll,setAutoScroll]=useState(false);const userRole='player';// Change this based on your login logic (\"admin\" or \"player\")\nconst isSinger=false;// For demo, set to true if the user is a singer\nuseEffect(()=>{// Listen for song updates from the server\nsocket.on('songUpdate',data=>{console.log('Song updated:',data);// Here you can update the displayed song if needed.\n});return()=>{socket.off('songUpdate');};},[]);const toggleAutoScroll=()=>{setAutoScroll(!autoScroll);// You can add logic here to automatically scroll the page content.\n};const quitSession=()=>{// Only admin should be able to quit, here we simply navigate back to the main page.\nsocket.emit('quitSession',{});// You could broadcast this to all clients.\nnavigate(userRole==='admin'?'/admin':'/player');};if(!song){return/*#__PURE__*/_jsx(\"p\",{children:\"No song selected.\"});}return/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.5em',backgroundColor:'#fff',color:'#000',padding:'1em'},children:[/*#__PURE__*/_jsx(\"h2\",{children:song.name}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"by \",song.artist]}),/*#__PURE__*/_jsx(\"div\",{children:song.data.map((line,index)=>/*#__PURE__*/_jsx(\"div\",{children:line.map((word,i)=>/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'0.5em'},children:isSinger||!word.chords?word.lyrics:`${word.lyrics} (${word.chords})`},i))},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleAutoScroll,style:{position:'fixed',bottom:'20px',right:'20px'},children:autoScroll?'Stop Scrolling':'Start Scrolling'}),userRole==='admin'&&/*#__PURE__*/_jsx(\"button\",{onClick:quitSession,style:{marginTop:'1em'},children:\"Quit\"})]});}export default Live;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","socket","jsx","_jsx","jsxs","_jsxs","Live","location","navigate","song","state","autoScroll","setAutoScroll","userRole","isSinger","on","data","console","log","off","toggleAutoScroll","quitSession","emit","children","style","fontSize","backgroundColor","color","padding","name","artist","map","line","index","word","i","marginRight","chords","lyrics","onClick","position","bottom","right","marginTop"],"sources":["C:/Users/yuval/moveo/jamoveo-app/src/components/Live.js"],"sourcesContent":["// src/components/Live.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport socket from '../socket';\r\n\r\nfunction Live() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { song } = location.state || {};\r\n  const [autoScroll, setAutoScroll] = useState(false);\r\n  const userRole = 'player'; // Change this based on your login logic (\"admin\" or \"player\")\r\n  const isSinger = false; // For demo, set to true if the user is a singer\r\n\r\n  useEffect(() => {\r\n    // Listen for song updates from the server\r\n    socket.on('songUpdate', (data) => {\r\n      console.log('Song updated:', data);\r\n      // Here you can update the displayed song if needed.\r\n    });\r\n    return () => {\r\n      socket.off('songUpdate');\r\n    };\r\n  }, []);\r\n\r\n  const toggleAutoScroll = () => {\r\n    setAutoScroll(!autoScroll);\r\n    // You can add logic here to automatically scroll the page content.\r\n  };\r\n\r\n  const quitSession = () => {\r\n    // Only admin should be able to quit, here we simply navigate back to the main page.\r\n    socket.emit('quitSession', {}); // You could broadcast this to all clients.\r\n    navigate(userRole === 'admin' ? '/admin' : '/player');\r\n  };\r\n\r\n  if (!song) {\r\n    return <p>No song selected.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ fontSize: '1.5em', backgroundColor: '#fff', color: '#000', padding: '1em' }}>\r\n      <h2>{song.name}</h2>\r\n      <h3>by {song.artist}</h3>\r\n      <div>\r\n        {song.data.map((line, index) => (\r\n          <div key={index}>\r\n            {line.map((word, i) => (\r\n              <span key={i} style={{ marginRight: '0.5em' }}>\r\n                {isSinger || !word.chords ? word.lyrics : `${word.lyrics} (${word.chords})`}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={toggleAutoScroll} style={{ position: 'fixed', bottom: '20px', right: '20px' }}>\r\n        {autoScroll ? 'Stop Scrolling' : 'Start Scrolling'}\r\n      </button>\r\n      {userRole === 'admin' && (\r\n        <button onClick={quitSession} style={{ marginTop: '1em' }}>\r\n          Quit\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Live;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}