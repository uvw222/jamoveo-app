{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuval\\\\moveo\\\\jamoveo-app\\\\src\\\\components\\\\Live.js\",\n  _s = $RefreshSig$();\n// src/components/Live.js\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Live() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    song\n  } = location.state || {};\n  const [autoScroll, setAutoScroll] = useState(false);\n  const userRole = 'player'; // Change this based on your login logic (\"admin\" or \"player\")\n  const isSinger = false; // For demo, set to true if the user is a singer\n\n  useEffect(() => {\n    // Listen for song updates from the server\n    socket.on('songUpdate', data => {\n      console.log('Song updated:', data);\n      // Here you can update the displayed song if needed.\n    });\n    return () => {\n      socket.off('songUpdate');\n    };\n  }, []);\n  const toggleAutoScroll = () => {\n    setAutoScroll(!autoScroll);\n    // You can add logic here to automatically scroll the page content.\n  };\n  const quitSession = () => {\n    // Only admin should be able to quit, here we simply navigate back to the main page.\n    socket.emit('quitSession', {}); // You could broadcast this to all clients.\n    navigate(userRole === 'admin' ? '/admin' : '/player');\n  };\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No song selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '1.5em',\n      backgroundColor: '#fff',\n      color: '#000',\n      padding: '1em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"by \", song.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: song.data.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line.map((word, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '0.5em'\n          },\n          children: isSinger || !word.chords ? word.lyrics : `${word.lyrics} (${word.chords})`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleAutoScroll,\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px'\n      },\n      children: autoScroll ? 'Stop Scrolling' : 'Start Scrolling'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: quitSession,\n      style: {\n        marginTop: '1em'\n      },\n      children: \"Quit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Live, \"0F4G/0yDHvtNr3GfxM/WNns+m4g=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Live;\nexport default Live;\nvar _c;\n$RefreshReg$(_c, \"Live\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","socket","jsxDEV","_jsxDEV","Live","_s","location","navigate","song","state","autoScroll","setAutoScroll","userRole","isSinger","on","data","console","log","off","toggleAutoScroll","quitSession","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","backgroundColor","color","padding","name","artist","map","line","index","word","i","marginRight","chords","lyrics","onClick","position","bottom","right","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/yuval/moveo/jamoveo-app/src/components/Live.js"],"sourcesContent":["// src/components/Live.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport socket from '../socket';\r\n\r\nfunction Live() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { song } = location.state || {};\r\n  const [autoScroll, setAutoScroll] = useState(false);\r\n  const userRole = 'player'; // Change this based on your login logic (\"admin\" or \"player\")\r\n  const isSinger = false; // For demo, set to true if the user is a singer\r\n\r\n  useEffect(() => {\r\n    // Listen for song updates from the server\r\n    socket.on('songUpdate', (data) => {\r\n      console.log('Song updated:', data);\r\n      // Here you can update the displayed song if needed.\r\n    });\r\n    return () => {\r\n      socket.off('songUpdate');\r\n    };\r\n  }, []);\r\n\r\n  const toggleAutoScroll = () => {\r\n    setAutoScroll(!autoScroll);\r\n    // You can add logic here to automatically scroll the page content.\r\n  };\r\n\r\n  const quitSession = () => {\r\n    // Only admin should be able to quit, here we simply navigate back to the main page.\r\n    socket.emit('quitSession', {}); // You could broadcast this to all clients.\r\n    navigate(userRole === 'admin' ? '/admin' : '/player');\r\n  };\r\n\r\n  if (!song) {\r\n    return <p>No song selected.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ fontSize: '1.5em', backgroundColor: '#fff', color: '#000', padding: '1em' }}>\r\n      <h2>{song.name}</h2>\r\n      <h3>by {song.artist}</h3>\r\n      <div>\r\n        {song.data.map((line, index) => (\r\n          <div key={index}>\r\n            {line.map((word, i) => (\r\n              <span key={i} style={{ marginRight: '0.5em' }}>\r\n                {isSinger || !word.chords ? word.lyrics : `${word.lyrics} (${word.chords})`}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={toggleAutoScroll} style={{ position: 'fixed', bottom: '20px', right: '20px' }}>\r\n        {autoScroll ? 'Stop Scrolling' : 'Start Scrolling'}\r\n      </button>\r\n      {userRole === 'admin' && (\r\n        <button onClick={quitSession} style={{ marginTop: '1em' }}>\r\n          Quit\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Live;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}